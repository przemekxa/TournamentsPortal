{"version":3,"sources":["HomeListItem.js","HomeList.js","tournament.service.js","Home.js","user.service.js","LoginRestore.js","Login.js","Navigation.js","Register.js","registration.service.js","TournamentRegistrationList.js","Match.js","Scoreboard.js","Tournament.js","Me.js","AddTournament.js","EditTournament.js","ActivateAccount.js","ResetPassword.js","Footer.js","App.js","index.js"],"names":["HomeListItem","data","history","useHistory","ListGroup","Item","action","onClick","push","id","name","className","discipline","Date","deadline","toLocaleDateString","HomeList","current","last","getData","pages","Array","fill","map","_","i","Pagination","active","bind","items","item","url","getTournaments","page","a","limit","axios","get","params","response","getTournament","addTournament","post","deleteTournament","delete","addLogo","tournament","logo","formData","FormData","append","headers","deleteLogo","editTournament","put","getMatches","addWinner","match","winner","Home","user","useState","loading","setData","current_page","last_page","useEffect","content","Spinner","animation","style","display","margin","to","Button","block","Container","Form","Row","Col","Control","type","placeholder","onChange","e","target","value","md","registerUser","login","loginRestore","email","encoded","btoa","logout","console","log","me","resp","activateAccount","resetPassword","password","restoration","LoginRestore","success","setSuccess","unknownError","setUnknownError","useForm","register","handleSubmit","errors","formState","setError","reset","onSubmit","Object","keys","forEach","key","message","join","status","errorAlert","Alert","variant","successAlert","Card","Header","as","Body","noValidate","Group","Label","isInvalid","required","Feedback","Login","setUser","Navigation","onLogout","toolbar","Nav","Navbar","Text","firstName","lastName","bg","Brand","Toggle","Collapse","Register","password2","addRegistration","TournamentRegistrationList","registrations","canAdd","reload","rows","reg","idx","license","rank","form","Table","striped","Match","amatch","update","modal","setModal","setWinner","winnerA","winnerB","registerButton","player_a","player_b","flexDirection","minWidth","width","alignItems","justifyContent","border","Modal","show","onHide","closeButton","Title","Footer","Scoreboard","matches","setMatches","m","getMatchesInner","length","maxLevel","Math","max","parseInt","level","matchLevels","tab","j","height","padding","entries","levelMinus1","col","row","rowSpan","leftmost","boxSizing","borderRight","borderTop","borderBottom","borderTopRightRadius","borderBottomRightRadius","rowSpanBegin","responsive","icon","L","iconUrl","Tournament","useParams","setTournament","deleteModal","setDeleteModal","delTournament","error","displayInner","organizer","date","deadlineBadge","logoCols","logos","xs","Image","src","filename","maxHeight","editButton","toLocaleString","maxParticipants","MapContainer","center","latitude","longitude","zoom","scrollWheelZoom","TileLayer","attribution","Marker","position","some","r","Me","details","setDetails","filterMatches","setFilterMatches","t","filter","opponent","result","checked","poznan","lat","lng","AddTournament","control","markerRef","useRef","today","marker","latLng","getLatLng","min","rules","render","field","zIndex","draggable","ref","File","label","multiple","accept","EditTournament","setPosition","eventHandlers","useMemo","dragend","logosToDelete","startsWith","replace","existingLogos","Check","defaultValue","ActivateAccount","link","decoded","JSON","parse","atob","activateInner","spinner","ResetPassword","getFullYear","App","path","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ec545a55.chunk.js","sourcesContent":["import { ListGroup } from 'react-bootstrap'\nimport { useHistory } from 'react-router-dom';\n\nexport default function HomeListItem({ data }) {\n\n  const history = useHistory();\n\n  return <ListGroup.Item\n    action\n    onClick={() => history.push(`/tournament/${data.id}`)}\n  >\n    <h5>{data.name}</h5>\n    <p className='my-1'>\n      <span className='text-secondary'>Dyscyplina: </span>\n      {data.discipline}\n    </p>\n    <p className='my-1'>\n      <span className='text-secondary'>Termin napływania zgłoszeń: </span>\n      {(new Date(data.deadline)).toLocaleDateString()}\n    </p>\n    <p className='my-1 text-monospace text-secondary'>\n      <small>#{data.id}</small>\n    </p>\n    {/* {JSON.stringify(data)} */}\n  </ListGroup.Item>\n}","import { Pagination, ListGroup } from 'react-bootstrap'\nimport HomeListItem from './HomeListItem'\n\nexport default function HomeList({current, last, data, getData}) {\n\n  let pages = Array(last).fill(0).map((_, i) => \n    <Pagination.Item\n        key={i + 1}\n        active={i + 1 === current}\n        onClick={getData.bind(this, i + 1)}\n      >\n        {i + 1}\n      </Pagination.Item>\n  )\n\n  let items = data?.map(item => <HomeListItem key={item.id} data={item} />)\n\n  return (\n    <div>\n      <ListGroup className='my-4'>\n        {items}\n      </ListGroup>\n      \n      <Pagination className='d-flex justify-content-center'>\n        {pages}\n      </Pagination>\n    </div>\n  )\n}\n","import axios from 'axios'\n\nexport const url = 'http://localhost:8000/'\n\nexport async function getTournaments(name, page, limit = 10) {\n\n  try {\n    let response = await axios.get(url + 'api/tournaments', {\n      params: {\n        name: name,\n        page: page,\n        limit: limit,\n      }\n    })\n    return await response.data\n  } catch {\n    return {\n      'current_page': 1,\n      'data': [],\n      'total': 0\n    }\n  }\n  \n}\n\nexport async function getTournament(id) {\n  let response = await axios.get(url + `api/tournaments/${id}`)\n  return await response.data\n}\n\nexport async function addTournament(data) {\n  let response = await axios.post(url + 'api/tournaments', data)\n  return await response.data\n}\n\nexport async function deleteTournament(id) {\n  await axios.delete(url + `api/tournaments/${id}`)\n}\n\nexport async function  addLogo(tournament, logo) {\n  let formData = new FormData()\n  formData.append('tournament', tournament)\n  formData.append('logo', logo)\n\n  await axios.post(url + 'api/logo', formData, {\n    headers: {\n      'Content-Type': 'multipart/form-data'\n    }\n  })\n}\n\nexport async function  deleteLogo(logo) {\n  await axios.delete(url + `api/logo/${logo}`)\n}\n\nexport async function editTournament(id, data) {\n  await axios.put(url + `api/tournaments/${id}`, data)\n}\n\nexport async function getMatches(tournament) {\n  let response = await axios.get(url + `api/matches/${tournament}`)\n  return await response.data\n}\n\nexport async function addWinner(tournament, match, winner) {\n  let data = {\n    id: match,\n    winner: winner\n  }\n  await axios.post(url + `api/matches/${tournament}/winner`, data)\n}","import React, { useState, useEffect } from 'react'\nimport { Form, Button, Row, Col, Container, Spinner } from 'react-bootstrap'\nimport HomeList from './HomeList'\nimport { Link } from \"react-router-dom\"\nimport { getTournaments } from './tournament.service'\n\nexport default function Home({user}) {\n\n  const [data, setData] = useState({\n    loading: true,\n    current: 1,\n    last: 1,\n    data: []\n  })\n\n  const getData = async (page = 1, name = '') => {\n    setData({loading: true})\n    let data = await getTournaments(name, page, 10)\n    setData({\n      loading: false,\n      current: data.current_page,\n      last: data.last_page,\n      data: data.data\n    })\n  }\n\n  useEffect(() => {\n    getData()\n  }, [])\n\n  let content = data.loading ?\n    <Spinner\n      animation='border'\n      style={{display: 'block', margin: '64px auto'}} />\n    :\n    <HomeList \n      current={data.current}\n      last={data.last}\n      data={data.data}\n      getData={(i) => getData(i)}\n      />\n\n  let addTournament = user ?\n    <Link to='/addTournament'>\n      <Button block>\n        Dodaj turniej\n      </Button>\n    </Link>\n    : null;\n\n  return (\n    <Container>\n      <h1>Turnieje</h1>\n      <div className='border rounded p-4 mt-4'>\n        <h5>Wyszukaj po nazwie</h5>\n        <Form>\n          <Row>\n            <Col>\n              <Form.Control\n                type='text'\n                placeholder='Wpisz nazwę...'\n                onChange={async (e) => await getData(data.current, e.target.value)}\n              />\n            </Col>\n            <Col md='auto' className='mt-4 mt-md-0'>\n              {/* <Button\n                variant='secondary'\n                className='ml-4 mr-0'\n                onClick={async () => await getData(data.current)} >\n                Wyczyść\n              </Button> */}\n            </Col>\n          </Row>\n        </Form>\n      </div>\n      {content}\n\n      {addTournament}\n\n    </Container>\n  )\n}\n","import axios from 'axios'\n\nconst url = 'http://localhost:8000/'\n\n\nexport async function registerUser(data) {\n  return await axios.post(url + 'api/users', data)\n}\n\nexport async function login(data) {\n  let response = await axios.post(url + 'api/login', data)\n  return await response.data\n}\n\nexport async function loginRestore(email) {\n  let encoded = btoa(email)\n  return await axios.post(url + `api/users/resetPassword/${encoded}`)\n}\n\nexport async function logout() {\n  try {\n    await axios.post(url + 'api/logout')\n  } catch(error) {\n    console.log('Error logging out:', error)\n  }\n}\n\nexport async function me() {\n  let resp = await axios.get(url + 'api/me')\n  return resp.data\n}\n\nexport async function activateAccount(data) {\n  await axios.post(url + 'api/users/activate', data)\n}\n\nexport async function resetPassword(email, password, restoration) {\n  let data = {\n    email: email,\n    password: password,\n    restoration: restoration\n  };\n  await axios.post(url + 'api/users/resetPassword', data);\n}\n\n","import { useState } from \"react\";\nimport { Button, Form, Alert, Card } from \"react-bootstrap\";\nimport { useForm } from \"react-hook-form\";\nimport { loginRestore } from './user.service'\n\nexport default function LoginRestore() {\n\n  const [success, setSuccess] = useState(null)\n  const [unknownError, setUnknownError] = useState(null)\n\n  const { register, handleSubmit, formState: { errors }, setError, reset } = useForm();\n\n\n  const onSubmit = async (data) => {\n    setSuccess(null)\n    setUnknownError(null)\n    try {\n      await loginRestore(data.email);\n      setSuccess(true);\n      reset();\n    } catch ({ response }) {\n      if(response?.data && typeof response?.data === 'object') {\n        setUnknownError(null)\n        Object.keys(response.data).forEach(key => {\n          setError(key, { type: 'server', message: response.data[key].join('\\n') })\n        })\n      } else if(response?.status === 401) {\n        setUnknownError('Brak autoryzacji')\n      } else {\n        setUnknownError('Wystąpił nieznany błąd')\n      }\n    }\n  }\n\n  let errorAlert = unknownError ?\n    <Alert variant='danger' className='my-4'>{unknownError}</Alert>\n    : null\n\n  let successAlert = success ?\n    <Alert variant='success' className='my-4'>Wiadomość z linkiem resetującym hasło została wysłana na podany adres email.</Alert>\n    : null\n\n  return (\n    \n    <Card className='mt-5'>\n        <Card.Header as='h3'>Przypomnij hasło</Card.Header>\n      <Card.Body>\n        <p>\n          Jeśli nie pamiętasz hasła, możesz je przywrócić, klikając w link wysłany na maila.\n        </p>\n        {errorAlert}\n        {successAlert}\n        <Form noValidate onSubmit={handleSubmit(onSubmit)}>\n\n          <Form.Group>\n            <Form.Label>Email</Form.Label>\n            <Form.Control\n              type='text'\n              placeholder='Wpisz email'\n              isInvalid={errors?.email}\n              {...register('email', { \n                required: { value: true, message: 'Email jest wymagany'} \n              })}\n            />\n            <Form.Control.Feedback type=\"invalid\">\n              {errors?.email?.message}\n            </Form.Control.Feedback>\n          </Form.Group>\n          \n          <Button \n            variant='primary'\n            type='submit'>\n            Przypomnij\n          </Button>\n          <Button \n            variant='secondary'\n            onClick={() => { reset(); setUnknownError(null); setSuccess(null); }}\n            className='ml-2'>\n            Wyczyść\n          </Button>\n        </Form>\n      </Card.Body>\n    </Card>\n  )\n}\n","import { useState } from \"react\";\nimport { Button, Form, Alert, Container } from \"react-bootstrap\";\nimport { useForm } from \"react-hook-form\";\nimport { useHistory } from \"react-router\";\nimport LoginRestore from \"./LoginRestore\";\nimport { login } from './user.service'\n\nexport default function Login({setUser}) {\n\n  const [unknownError, setUnknownError] = useState(null)\n\n  const { register, handleSubmit, formState: { errors }, setError, reset } = useForm();\n\n  const history = useHistory();\n\n  const onSubmit = async (data) => {\n    try {\n      let user = await login(data)\n      setUser(user)\n      history.push('/')\n    } catch ({ response }) {\n      if(response?.data && typeof response?.data === 'object') {\n        setUnknownError(null)\n        Object.keys(response.data).forEach(key => {\n          setError(key, { type: 'server', message: response.data[key].join('\\n') })\n        })\n      } else if(response?.status === 401) {\n        setUnknownError('Nie znaleziono konta, nieprawidłowy email, hasło lub konto nie aktywowane')\n      } else {\n        setUnknownError('Wystąpił nieznany błąd')\n      }\n    }\n  }\n\n  let errorAlert = unknownError ?\n    <Alert variant='danger' className='my-4'>{unknownError}</Alert>\n    : null\n\n  return (\n    <Container>\n      <h1>Zaloguj się</h1>\n      {errorAlert}\n      <Form noValidate onSubmit={handleSubmit(onSubmit)}>\n\n        <Form.Group>\n          <Form.Label>Email</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='Wpisz email'\n            isInvalid={errors?.email}\n            {...register('email', { \n              required: { value: true, message: 'Email jest wymagany'} \n            })}\n          />\n          <Form.Control.Feedback type=\"invalid\">\n            {errors?.email?.message}\n          </Form.Control.Feedback>\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label>Hasło</Form.Label>\n          <Form.Control\n            type='password'\n            isInvalid={errors?.password}\n            {...register('password', { \n              required: { value: true, message: 'Hasło jest wymagane'} \n            })}\n          />\n          <Form.Control.Feedback type=\"invalid\">\n            {errors?.password?.message}\n          </Form.Control.Feedback>\n        </Form.Group>\n        \n        <Button \n          variant='primary'\n          type='submit'>\n          Zaloguj się\n        </Button>\n        <Button \n          variant='secondary'\n          onClick={() => { reset(); setUnknownError(null); }}\n          className='ml-2'>\n          Wyczyść\n        </Button>\n      </Form>\n      <LoginRestore />\n    </Container>\n  )\n}\n","import { Button, Navbar, Nav } from \"react-bootstrap\"\nimport { Link, useHistory } from \"react-router-dom\"\nimport { logout } from \"./user.service\"\n\nexport default function Navigation({user, setUser}) {\n\n  const history = useHistory();\n\n  const onLogout = async () => {\n    await logout;\n    setUser(null);\n    history.push('/');\n  }\n\n  let toolbar = user ?\n    <Nav>\n      <Navbar.Text className='mx-2'>\n        Zalogowano jako <Link to='/me'>{user.firstName} {user.lastName} ({user.email})</Link>\n      </Navbar.Text>\n      <Nav.Item className='mr-2'>\n        <Link to='/me'>\n          <Button variant='outline-secondary'>Profil</Button>\n        </Link>\n      </Nav.Item>\n      <Nav.Item>\n        <Button variant='outline-secondary' onClick={onLogout}>Wyloguj</Button>\n      </Nav.Item>\n    </Nav>\n    :\n    <Nav>\n      <Navbar.Text className='mx-2'>\n        <Link to='/login'>Zaloguj się</Link>\n      </Navbar.Text>\n      <Navbar.Text className='mx-2'>\n        <Link to='/register'>Zarejestruj się</Link>\n      </Navbar.Text>\n    </Nav>\n\n  return (\n    <Navbar bg='light' className='mb-4'>\n        <Navbar.Brand>\n          <Link to='/'>Portal turniejowy</Link>\n        </Navbar.Brand>\n        <Navbar.Toggle />\n        <Navbar.Collapse className='justify-content-end'>\n          {toolbar}\n        </Navbar.Collapse>\n      </Navbar>\n  )\n}\n","import { useState } from \"react\";\nimport { Button, Form, Alert, Container } from \"react-bootstrap\";\nimport { useForm } from \"react-hook-form\";\nimport { registerUser } from './user.service'\n\nexport default function Register() {\n\n  const [success, setSuccess] = useState(false)\n  const [unknownError, setUnknownError] = useState(null)\n\n  const { register, handleSubmit, formState: { errors }, setError, reset } = useForm();\n\n  const onSubmit = async (data) => {\n    setUnknownError(null)\n    if(data.password !== data.password2) {\n      setError('password2', { type: 'server', message: 'Hasła muszą byc takie same'});\n      return;\n    }\n    try {\n      await registerUser(data)\n      setSuccess(true)\n      setUnknownError(null)\n      reset()\n    } catch ({ response }) {\n      if(response?.data && typeof response?.data === 'object') {\n        setUnknownError(null)\n        Object.keys(response.data).forEach(key => {\n          setError(key, { type: 'server', message: response.data[key].join('\\n') })\n        })\n      } else {\n        setUnknownError('Wystąpił nieznany błąd')\n      }\n    }\n  }\n\n  let successAlert = success ?\n    <Alert variant='success' className='my-4'>\n      Na podany adres email został wysłany link aktywujący konto.\n    </Alert>\n    : null\n\n  let errorAlert = unknownError ?\n    <Alert variant='danger' className='my-4'>{unknownError}</Alert>\n    : null\n\n  return (\n    <Container>\n      <h1>Zarejestruj się</h1>\n      {successAlert}\n      {errorAlert}\n      <Form noValidate onSubmit={handleSubmit(onSubmit)}>\n        <Form.Group>\n          <Form.Label>Imię</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='Wpisz imię'\n            isInvalid={errors?.firstName}\n            {...register('firstName', { \n              required: { value: true, message: 'Imię jest wymagane'} \n            })}\n          />\n          <Form.Control.Feedback type=\"invalid\">\n            {errors?.firstName?.message}\n          </Form.Control.Feedback>\n        </Form.Group>\n        <Form.Group>\n          <Form.Label>Nazwisko</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='Wpisz nazwisko'\n            isInvalid={errors?.lastName}\n            {...register('lastName', { \n              required: { value: true, message: 'Nazwisko jest wymagane'} \n            })}\n          />\n          <Form.Control.Feedback type=\"invalid\">\n            {errors?.lastName?.message}\n          </Form.Control.Feedback>\n        </Form.Group>\n        <Form.Group>\n          <Form.Label>Email</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='Wpisz email'\n            isInvalid={errors?.email}\n            {...register('email', { \n              required: { value: true, message: 'Email jest wymagany'} \n            })}\n          />\n          <Form.Control.Feedback type=\"invalid\">\n            {errors?.email?.message}\n          </Form.Control.Feedback>\n        </Form.Group>\n        <Form.Group>\n          <Form.Label>Hasło</Form.Label>\n          <Form.Control\n            type='password'\n            isInvalid={errors?.password}\n            {...register('password', { \n              required: { value: true, message: 'Hasło jest wymagane'} \n            })}\n          />\n          <Form.Control.Feedback type=\"invalid\">\n            {errors?.password?.message}\n          </Form.Control.Feedback>\n        </Form.Group>\n        <Form.Group>\n          <Form.Label>Powtórz hasło</Form.Label>\n          <Form.Control\n            type='password'\n            isInvalid={errors?.password2}\n            {...register('password2', { \n              required: { value: true, message: 'Hasło jest wymagane'} \n            })}\n          />\n          <Form.Control.Feedback type=\"invalid\">\n            {errors?.password2?.message}\n          </Form.Control.Feedback>\n        </Form.Group>\n        \n        <Button \n          variant='primary'\n          type='submit'>\n          Zarejestruj się\n        </Button>\n        <Button \n          variant='secondary'\n          onClick={() => { reset(); setSuccess(false); setUnknownError(null); }}\n          className='ml-2'>\n          Wyczyść\n        </Button>\n      </Form>\n    </Container>\n  )\n}\n","import axios from 'axios'\n\nconst url = 'http://localhost:8000/'\n\nexport async function addRegistration(data) {\n  return await axios.post(url + 'api/registrations', data)\n}","import { useState } from \"react\";\nimport { Form, Button, Row, Col, Alert, Table } from 'react-bootstrap'\nimport { useForm } from \"react-hook-form\";\nimport { addRegistration } from \"./registration.service\";\n\n\nexport default function TournamentRegistrationList({registrations, canAdd, tournament, reload}) {\n\n  const { register, handleSubmit, formState: { errors }, setError } = useForm();\n\n  let rows = registrations.map((reg, idx) => \n    <tr key={idx}>\n      <td>{idx + 1}</td>\n      <td>{reg.user.firstName}</td>\n      <td>{reg.user.lastName}</td>\n      <td>{reg.user.email}</td>\n      <td>{reg.license}</td>\n      <td>{reg.rank}</td>\n    </tr>\n  )\n\n  const [unknownError, setUnknownError] = useState(null)\n\n  const onSubmit = async (data) => {\n    data.tournament = tournament;\n    setUnknownError(null);\n    try {\n      await addRegistration(data)\n      await reload();\n    } catch ({ response }) {\n      if(response?.data && typeof response?.data === 'object') {\n        setUnknownError(null)\n        Object.keys(response.data).forEach(key => {\n          setError(key, { type: 'server', message: response.data[key].join('\\n') })\n        })\n      } else if(response?.data) {\n        setUnknownError(response?.data)\n      } else {\n        setUnknownError('Wystąpił nieznany błąd')\n      }\n    }\n  }\n  \n  let errorAlert = unknownError ?\n    <Alert variant='danger' className='my-4'>{unknownError}</Alert>\n    : null;\n\n  let form = canAdd ?\n    (<div>\n      <h4>Zarejestruj się</h4>\n      {errorAlert}\n      <Form noValidate onSubmit={handleSubmit(onSubmit)}>\n        <Row>\n          <Col>\n            <Form.Group>\n              <Form.Label>Licencja</Form.Label>\n              <Form.Control\n                type='text'\n                placeholder='Wpisz licencję'\n                isInvalid={errors?.license}\n                {...register('license', { \n                  required: { value: true, message: 'Licencja jest wymagana'} \n                })}\n              />\n              <Form.Control.Feedback type=\"invalid\">\n                {errors?.license?.message}\n              </Form.Control.Feedback>\n            </Form.Group>\n          </Col>\n\n          <Col>\n            <Form.Group>\n              <Form.Label>Ranking</Form.Label>\n              <Form.Control\n                type='text'\n                placeholder='Wpisz ranking'\n                isInvalid={errors?.rank}\n                {...register('rank', { \n                  required: { value: true, message: 'Ranking jest wymagany'} \n                })}\n              />\n              <Form.Control.Feedback type=\"invalid\">\n                {errors?.rank?.message}\n              </Form.Control.Feedback>\n            </Form.Group>\n          </Col>\n        </Row>\n\n        <Button \n          variant='primary'\n          block\n          type='submit'>\n          Zarejestruj się\n        </Button>\n      </Form>\n    </div>) : null;\n\n  return (\n    <div>\n      <h3 className='mt-4'>Rejestracje</h3>\n      <Table striped>\n        <thead>\n          <tr>\n            <th>#</th>\n            <th>Imię</th>\n            <th>Nazwisko</th>\n            <th>Email</th>\n            <th>Licencja</th>\n            <th>Ranking</th>\n          </tr>\n        </thead>\n        <tbody>\n          {rows}\n        </tbody>\n      </Table>\n      {form}\n      \n      \n    </div>\n  )\n  \n}","import { useState } from \"react\";\nimport { Card, Button, Modal } from \"react-bootstrap\"\nimport { addWinner } from \"./tournament.service\"\n\nexport default function Match({amatch, user, update}) {\n\n  const [modal, setModal] = useState(false);\n\n  const setWinner = async (winner) => {\n    setModal(false)\n    await addWinner(amatch.tournament, amatch.id, winner)\n    update()\n  }\n\n  let winnerA = amatch.winnerA === 'A' && amatch.winnerB === 'A' ? \n    <strong>WYGRANA</strong>\n    : null;\n\n  let winnerB = amatch.winnerA === 'B' && amatch.winnerB === 'B' ? \n    <strong>WYGRANA</strong>\n    : null;\n\n  let registerButton =\n    (user?.email && amatch.player_a && amatch.player_b) &&\n    (\n      (amatch.winnerA === null && user?.email === amatch.player_a?.email) ||\n      (amatch.winnerB === null && user?.email === amatch.player_b?.email) \n    ) ?\n    <Button\n      variant='primary'\n      className='mt-3'\n      onClick={() => setModal(true)}\n      block\n    >Zarejestruj wynik</Button>\n    : null;\n\n  return (\n    <>\n    <Card style={{\n      display: 'flex',\n      flexDirection: 'column',\n      minWidth: '300px',\n      width: '100%',\n      margin: '8px 0',\n    }}>\n      <Card.Body>\n        <div style={{\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'space-between',\n          border: '0px solid black'}}>\n          <div>\n            <p className='mt-0 mb-0'>{amatch.player_a?.firstName ?? '-'} {amatch.player_a?.lastName}</p>\n            <small className='mt-0 mb-0'>{amatch.player_a?.email}</small>\n          </div>\n          <div className='ml-3'>\n            {winnerA}\n          </div>\n        </div>\n        <hr />\n        <div style={{\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'space-between',\n          border: '0px solid black'}}>\n        <div>\n            <p className='mt-0 mb-0'>{amatch.player_b?.firstName ?? '-'} {amatch.player_b?.lastName}</p>\n            <small className='mt-0 mb-0'>{amatch.player_b?.email}</small>\n          </div>\n          <div className='ml-3'>\n            {winnerB}\n          </div>\n        </div>\n        {registerButton}\n      </Card.Body>\n    </Card>\n    <Modal show={modal} onHide={() => setModal(false)}>\n        <Modal.Header closeButton>\n          <Modal.Title>Zarejestruj wynik</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          Wybierz, kto wygrał ten mecz:\n          <h3>A</h3>\n          <p className='mt-0 mb-0'>{amatch.player_a?.firstName} {amatch.player_a?.lastName}</p>\n          <small className='mt-0 mb-0'>{amatch.player_a?.email}</small>\n          <h3>B</h3>\n          <p className='mt-0 mb-0'>{amatch.player_b?.firstName} {amatch.player_b?.lastName}</p>\n          <small className='mt-0 mb-0'>{amatch.player_b?.email}</small>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button\n            variant=\"secondary\"\n            onClick={() => setModal(false)}\n          >\n            Zamknij\n          </Button>\n          <Button\n            variant=\"primary\"\n            onClick={async () => await setWinner('A')}\n          >\n            A ({amatch.player_a?.email})\n          </Button>\n          <Button\n            variant=\"primary\"\n            onClick={async () => await setWinner('B')}\n          >\n            B ({amatch.player_b?.email})\n          </Button>\n        </Modal.Footer>\n    </Modal>\n    </>\n  )\n}","import { useState, useEffect } from 'react';\nimport { Table } from 'react-bootstrap';\nimport Match from './Match';\nimport { getMatches } from './tournament.service';\n\nexport default function Scoreboard({tournament, user}) {\n\n  const [matches, setMatches] = useState([]);\n\n  const update = async () => {\n    try {\n      let m = await getMatches(tournament)\n      setMatches(m)\n    } catch {\n      setMatches([])\n    }\n  }\n\n  useEffect(() => {\n    async function getMatchesInner() {\n      await update()\n    }\n    getMatchesInner();\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  if(matches.length === 0) {\n    return null;\n  }\n\n  let maxLevel = Math.max( ...matches.map(match => parseInt(match.level)))\n\n  // Match with levels\n  let matchLevels = new Array(maxLevel);\n  for (var idx = 0; idx < matchLevels.length; idx++) {\n    matchLevels[idx] = []\n  }\n  for(const match of matches) {\n    matchLevels[match.level - 1].push(match)\n  }\n\n  // Result table\n  let tab = new Array(2**(maxLevel - 1))\n  for (var i = 0; i < tab.length; i++) {\n    tab[i] = new Array(maxLevel);\n    for(var j = 0; j < tab[i].length; j++) {\n      tab[i][j] = <td\n        key={`${i}:${j}`}\n        style={{\n          border: 'none',\n          height: '250px',\n          padding: '0'\n        }}\n        />\n    }\n  }\n  for(const [i, levelMinus1] of matchLevels.entries()) {\n    for(const [idx, match] of levelMinus1.entries()) {\n      let col = maxLevel - match.level\n      let row = idx * (maxLevel - match.level + 1)\n      let rowSpan = 2**(maxLevel - match.level)\n      let leftmost = match.level < maxLevel ? \n        <div style={{\n          height: '50%',\n          width: '20px',\n          boxSizing: 'border-box',\n          borderRight: '2px solid gray',\n          borderTop: '2px solid gray',\n          borderBottom: '2px solid gray',\n          borderTopRightRadius: '12px',\n          borderBottomRightRadius: '12px',\n          margin: '0 12px',\n        }}>\n        </div>\n        : null;\n      \n      tab[row][col] = <td \n        key={`${i}:${idx}`}\n        rowSpan={rowSpan}\n        style={{\n          //border: '1px solid black',\n          border: 'none',\n          height: '0px',\n          padding: '0'\n        }}\n        >\n          <div style={{\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n            height: '100%',\n            minWidth: '200px',\n          }}>\n            {leftmost}\n            <Match\n              amatch={match}\n              user={user}\n              update={async () => await update()}\n              />\n          </div>\n        </td>\n      for(var rowSpanBegin = row + 1; rowSpanBegin < row + rowSpan; rowSpanBegin++) {\n        tab[rowSpanBegin][col] = null;\n      }\n    }\n  }\n\n  let rows = tab.map((row, i) => {\n    return <tr key={i}>{row}</tr>\n  })\n\n  return (\n    <>\n      <h3 className='mt-4 mb-4'>Tablica wyników</h3>\n      <Table responsive>\n        <tbody>\n          {rows}\n        </tbody>\n      </Table>\n    </>\n  )\n}","import { useState, useEffect } from \"react\";\nimport { Container, Spinner, Button, Row, Col, Image, Modal } from \"react-bootstrap\";\nimport { useHistory, useParams, Link } from \"react-router-dom\";\nimport { url, getTournament, deleteTournament } from \"./tournament.service\";\nimport TournamentRegistrationList from \"./TournamentRegistrationList\";\nimport { MapContainer, TileLayer, Marker } from \"react-leaflet\";\nimport \"leaflet/dist/leaflet.css\";\nimport L from \"leaflet\";\nimport Scoreboard from \"./Scoreboard\";\n\nconst icon = L.icon({ iconUrl: \"/marker-icon.png\" });\n\nexport default function Tournament({user}) {\n\n  let { id } = useParams();\n  let history = useHistory();\n  const [tournament, setTournament] = useState(null);\n  const [deleteModal, setDeleteModal] = useState(false);\n\n  const display = async () => {\n    setTournament(null);\n    try {\n      let data = await getTournament(id);\n      setTournament(data);\n    } catch(error) {\n      history.push('/notFound');\n    }\n  }\n\n  const delTournament = async () => {\n    try {\n      await deleteTournament(id);\n      history.push('/');\n    } catch {\n      console.error('Cannot delete tournament');\n    }\n  }\n\n\n  const canRegister = () => {\n    return (\n      user != null &&\n      tournament.registrations.length < tournament.maxParticipants &&\n      (new Date(tournament.deadline)) > (new Date()) &&\n      !tournament.registrations.some(r => r.user.email === user.email)\n    )\n  }\n\n  useEffect(() => {\n    async function displayInner() {\n      await display()\n    }\n    displayInner();\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  if(tournament) {\n    let organizer = tournament.organizer;\n    let date = new Date(tournament.date);\n    let deadline = new Date(tournament.deadline);\n    let deadlineBadge = deadline > (new Date()) ?\n      <span className=\"badge badge-success\">Przed terminem</span> :\n      <span className=\"badge badge-secondary\">Termin minął</span>\n\n    let logoCols = tournament.logos?.map((logo, idx) =>\n      <Col xs='4' key={idx} className='justify-content-center'>\n        <Image\n          src={url + 'logo/' + logo.filename}\n          style={{maxHeight: '100px', display: 'block', margin: '12px auto'}}\n          />\n      </Col>\n    )\n\n    let logos = logoCols && logoCols?.length > 0 ?\n      <div className='mt-4'>\n        <h3>Sponsorzy</h3>\n        <Row className='align-items-center justify-content-center'>\n          {logoCols}\n        </Row>\n      </div>\n      : null;\n\n    let editButton = user?.email === organizer.email ? \n      <Row className='mt-5'>\n        <Col>\n          <Link to={`/tournament/${tournament.id}/edit`}>\n            <Button block>Edytuj turniej</Button>\n          </Link>\n        </Col>\n        <Col>\n          <Button block variant='danger' onClick={() => setDeleteModal(true)}>Usuń turniej</Button>\n        </Col>\n      </Row>\n      \n      : null;\n\n    return (\n      <Container>\n        <h1 className='mb-3'>{tournament.name}</h1>\n        <p><strong>Dysciplina:</strong> {tournament.discipline}</p>\n        <p><strong>Organizator:</strong> {organizer.firstName} {organizer.lastName} (<em>{organizer.email}</em>) </p>\n        <p><strong>Data:</strong> {date.toLocaleString()}</p>\n        <p><strong>Limit zgłoszeń:</strong> {tournament.maxParticipants}</p>\n        <p><strong>Deadline na zgłoszenie:</strong> {deadline.toLocaleString()} {deadlineBadge}</p>\n\n        <MapContainer\n          center={[tournament.latitude, tournament.longitude]}\n          zoom={13}\n          scrollWheelZoom={false}\n          style={{height: '300px'}}>\n          <TileLayer\n            attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n          />\n          <Marker\n            position={[tournament.latitude, tournament.longitude]}\n            icon={icon}\n            />\n        </MapContainer>\n\n        <TournamentRegistrationList\n          registrations={tournament.registrations}\n          tournament={id}\n          canAdd={canRegister()}\n          reload={async () => await display() }\n          />\n\n        \n        {logos}\n\n        <Scoreboard\n          user={user}\n          tournament={tournament.id}\n          />\n        \n        {editButton}\n\n        <Modal show={deleteModal} onHide={() => setDeleteModal(false)}>\n          <Modal.Header closeButton>\n            <Modal.Title>Usuń turniej</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            Czy na pewno chcesz usunąć turniej?\n          </Modal.Body>\n          <Modal.Footer>\n            <Button\n              variant=\"secondary\"\n              onClick={() => setDeleteModal(false)}\n            >\n              Zamknij\n            </Button>\n            <Button\n              variant='danger'\n              onClick={async () => await delTournament()}\n            >\n              Usuń\n            </Button>\n          </Modal.Footer>\n      </Modal>\n        \n        \n      </Container>\n    )\n  }\n\n  return (\n    <Spinner\n      animation='border'\n      style={{display: 'block', margin: '64px auto'}} />\n  )\n  \n}","import React, { useState, useEffect } from 'react'\nimport { Container, Table } from \"react-bootstrap\";\nimport { useHistory, Link } from 'react-router-dom';\nimport { me } from './user.service';\n\nexport default function Me({user}) {\n\n  const history = useHistory();\n  const [details, setDetails] = useState(null);\n  const [filterMatches, setFilterMatches] = useState(false);\n\n  const display = async () => {\n    if(user?.email) {\n      try {\n        let data = await me()\n        setDetails(data)\n      } catch {\n        history.push('/');\n      }\n    } else {\n      history.push('/login');\n    }\n  }\n\n  useEffect(() => {\n    async function displayInner() {\n      await display()\n    }\n    displayInner();\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  if(user === null) {\n    return <p>Brak dostępu</p>\n  }\n\n  let organizer = details?.organizer.map((t, idx) =>\n    <tr key={idx}>\n      <td>{idx + 1}</td>\n      <td>{t.name}</td>\n      <td>{t.discipline}</td>\n      <td>{(new Date(t.date)).toLocaleString()}</td>\n      <td><Link to={`/tournament/${t.id}`}>Zobacz</Link></td>\n    </tr>\n  )\n\n  let registrations = details?.registrations.map((r, idx) =>\n    <tr key={idx}>\n      <td>{idx + 1}</td>\n      <td>{r.tournament.name}</td>\n      <td>{(new Date(r.tournament.date)).toLocaleString()}</td>\n      <td>{r.license}</td>\n      <td>{r.rank}</td>\n      <td><Link to={`/tournament/${r.tournament.id}`}>Zobacz</Link></td>\n    </tr>\n  )\n\n  let matches = details?.matches\n    .filter((match) => {\n      if(filterMatches) {\n        return match.winnerA === null || match.winnerB === null;\n      }\n      return true;\n    })\n    .map((m, idx) => {\n      let opponent = m.player_a.email === user.email ? m.player_b : m.player_a;\n      let result = '-';\n      if(m.winnerA === m.winnerB && (m.winnerA === 'A' || m.winnerA === 'B')) {\n        if(\n          (m.winnerA === 'A' && m.player_a.email === user.email) ||\n          (m.winnerA === 'B' && m.player_b.email === user.email)) {\n            result = 'Wygrana';\n        } else {\n          result = 'Przegrana';\n        }\n      }\n      return (<tr key={idx}>\n        <td>{idx + 1}</td>\n        <td>{m.tournament.name}</td>\n        <td>{(new Date(m.tournament.date)).toLocaleString()}</td>\n        <td>{opponent.firstName} {opponent.lastName} ({opponent.email})</td>\n        <td>{result}</td>\n        <td><Link to={`/tournament/${m.tournament.id}`}>Zobacz</Link></td>\n      </tr>)\n  })\n\n  return (\n    <Container>\n      <h1>Twój profil</h1>\n      <p><strong>Imię:</strong> {user.firstName}</p>\n      <p><strong>Nazwisko:</strong> {user.lastName}</p>\n      <p><strong>Adres email:</strong> {user.email}</p>\n\n      <h2 className='mt-5'>Twoje turnieje</h2>\n      <Table striped>\n        <thead>\n          <tr>\n            <th>#</th>\n            <th>Nazwa</th>\n            <th>Dyscyplina</th>\n            <th>Data</th>\n            <th>Zobacz</th>\n          </tr>\n        </thead>\n        <tbody>\n          {organizer}\n        </tbody>\n      </Table>\n\n      <h2 className='mt-5'>Twoje rejestracje</h2>\n      <Table striped>\n        <thead>\n          <tr>\n            <th>#</th>\n            <th>Turniej</th>\n            <th>Data</th>\n            <th>Licencja</th>\n            <th>Ranking</th>\n            <th>Zobacz</th>\n          </tr>\n        </thead>\n        <tbody>\n          {registrations}\n        </tbody>\n      </Table>\n\n      <h2 className='mt-5'>Twoje mecze</h2>\n      <p>\n        <input\n          type='checkbox'\n          checked={filterMatches}\n          onChange={(e) => setFilterMatches(e.target.checked)}\n        /> Tylko mecze bez wyniku {filterMatches}\n      </p>\n      <Table striped>\n        <thead>\n          <tr>\n            <th>#</th>\n            <th>Turniej</th>\n            <th>Data</th>\n            <th>Przeciwnik</th>\n            <th>Rezultat</th>\n            <th>Zobacz</th>\n          </tr>\n        </thead>\n        <tbody>\n          {matches}\n        </tbody>\n      </Table>\n      {/* TODO: Dodać mecze */}\n\n\n    </Container>\n  )\n}","import { useState, useRef } from \"react\";\nimport { Container, Form, Button, Alert } from \"react-bootstrap\";\nimport { Controller, useForm } from \"react-hook-form\";\nimport { useHistory } from \"react-router-dom\";\nimport DateTimePicker from 'react-datetime-picker';\nimport { MapContainer, TileLayer, Marker } from \"react-leaflet\";\nimport \"leaflet/dist/leaflet.css\";\nimport L from \"leaflet\";\nimport { addLogo, addTournament } from \"./tournament.service\";\n\nconst icon = L.icon({ iconUrl: \"/marker-icon.png\" });\nconst poznan = {\n  lat: 52.408333,\n  lng: 16.934167\n}\n\nexport default function AddTournament({user}) {\n\n  const [unknownError, setUnknownError] = useState(null);\n  const { register, handleSubmit, formState: { errors }, setError, reset, control } = useForm();\n\n  const history = useHistory();\n\n  const markerRef = useRef(null);\n\n  const onSubmit = async (data) => {\n    setUnknownError(null);\n\n    var today = new Date();\n\n    // Check the dates\n    if(data.date < today) {\n      setUnknownError('Wydarzenie nie może być w przeszłości');\n      return;\n    }\n    if(data.deadline > data.date) {\n      setUnknownError('Deadline nie może być późniejszy niż wydarzenie');\n      return;\n    }\n\n    // Add tournament\n    const marker = markerRef.current\n    if (marker != null) {\n      let latLng = marker.getLatLng()\n      data.latitude = latLng.lat\n      data.longitude = latLng.lng\n    } else {\n      setUnknownError('Wystąpił błąd związany z mapami')\n      return\n    }\n\n    try {\n      let tournament = await addTournament(data)\n      for(const logo of data.logos) {\n        await addLogo(tournament.id, logo);\n      }\n      history.push(`/tournament/${tournament.id}`)\n    } catch ({ response }) {\n      if(response?.data && typeof response?.data === 'object') {\n        setUnknownError(null)\n        Object.keys(response.data).forEach(key => {\n          setError(key, { type: 'server', message: response.data[key].join('\\n') })\n        })\n      } else if(response?.data) {\n        setUnknownError(response?.data)\n      } else {\n        setUnknownError('Wystąpił nieznany błąd')\n      }\n    }\n  }\n\n  let errorAlert = unknownError ?\n    <Alert variant='danger' className='my-4'>{unknownError}</Alert>\n    : null\n\n  return (\n    <Container>\n      <h1>Dodaj turniej</h1>\n      {errorAlert}\n      <Form noValidate onSubmit={handleSubmit(onSubmit)}>\n\n        <Form.Group>\n          <Form.Label>Nazwa</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='Wpisz nazwę turnieju'\n            isInvalid={errors?.name}\n            {...register('name', { \n              required: { value: true, message: 'Nazwa jest wymagana'} \n            })}\n          />\n          <Form.Control.Feedback type=\"invalid\">\n            {errors?.name?.message}\n          </Form.Control.Feedback>\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label>Dyscyplina</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='Wpisz nazwę turnieju'\n            isInvalid={errors?.discipline}\n            {...register('discipline', { \n              required: { value: true, message: 'Dyscyplina jest wymagana'} \n            })}\n          />\n          <Form.Control.Feedback type=\"invalid\">\n            {errors?.discipline?.message}\n          </Form.Control.Feedback>\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label>Maksymalna liczba uczestników</Form.Label>\n          <Form.Control\n            type='number'\n            placeholder='Wpisz liczbę uczestników'\n            isInvalid={errors?.maxParticipants}\n            {...register('maxParticipants', { \n              required: { value: true, message: 'Maksymalna liczba uczestników jest wymagana'},\n              min: { value: 1, message: 'Musi być co najmniej jeden uczestnik'},\n              max: { value: 255, message: 'Maksymalna liczba uczestników wynosi 255'}\n            })}\n          />\n          <Form.Control.Feedback type=\"invalid\">\n            {errors?.maxParticipants?.message}\n          </Form.Control.Feedback>\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label className='mr-3'>Data </Form.Label>\n          <Controller\n            control={control}\n            name='date'\n            rules={{ \n              required: { value: true, message: 'Data jest wymagana'},\n            }}\n            render={({ field: { onChange, value } }) => (\n              <DateTimePicker\n                value={value}\n                onChange={onChange}\n              />\n            )}\n          />\n          <span className='ml-3'>{errors?.date?.message}</span>\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label className='mr-3'>Deadline na zgłoszenia </Form.Label>\n          <Controller\n            control={control}\n            name='deadline'\n            rules={{ \n              required: { value: true, message: 'Data jest wymagana'},\n            }}\n            render={({ field: { onChange, value } }) => (\n              <DateTimePicker\n                value={value}\n                onChange={onChange}\n              />\n            )}\n          />\n          <span className='ml-3'>{errors?.deadline?.message}</span>\n        </Form.Group>\n\n        <h5>Lokalizacja</h5>\n\n        <MapContainer\n          center={poznan}\n          zoom={13}\n          scrollWheelZoom={false}\n          style={{height: '300px', margin: '0 0 32px 0', zIndex: 0}}\n        >\n          <TileLayer\n            attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n          />\n          <Marker\n            position={poznan}\n            icon={icon}\n            draggable={true}\n            ref={markerRef}\n            />\n        </MapContainer>\n\n        <h5>Loga sponsorów</h5>\n        <Form.File\n          id='logos'\n          label='Wybierz loga'\n          multiple\n          accept='image/png, image/jpeg'\n          className='mb-4'\n          {...register('logos')}\n        />\n\n        \n        <Button \n          variant='primary'\n          type='submit'>\n          Dodaj\n        </Button>\n        <Button \n          variant='secondary'\n          onClick={() => { reset(); setUnknownError(null); }}\n          className='ml-2'>\n          Wyczyść\n        </Button>\n      </Form>\n\n    </Container>\n  )\n}","import { useState, useRef, useEffect, useMemo } from \"react\";\nimport { Container, Form, Button, Alert, Spinner, Table, Image } from \"react-bootstrap\";\nimport { Controller, useForm } from \"react-hook-form\";\nimport { useHistory, useParams, Link } from \"react-router-dom\";\nimport DateTimePicker from 'react-datetime-picker';\nimport { MapContainer, TileLayer, Marker } from \"react-leaflet\";\nimport \"leaflet/dist/leaflet.css\";\nimport L from \"leaflet\";\nimport { url, getTournament, addLogo, editTournament, deleteLogo } from \"./tournament.service\";\n\nconst icon = L.icon({ iconUrl: \"/marker-icon.png\" });\n\nexport default function EditTournament({user}) {\n\n  let { id } = useParams();\n  const [tournament, setTournament] = useState(null);\n  const [position, setPosition] = useState(null);\n  const [unknownError, setUnknownError] = useState(null);\n  const { register, handleSubmit, formState: { errors }, setError, control } = useForm();\n\n  const history = useHistory();\n\n  const markerRef = useRef(null);\n  const eventHandlers = useMemo(\n    () => ({\n      dragend() {\n        const marker = markerRef.current\n        if (marker != null) {\n          setPosition(marker.getLatLng())\n        }\n      },\n    }),\n    [],\n  )\n\n  // Display the current tournament\n\n  const display = async () => {\n    setTournament(null);\n    try {\n      let data = await getTournament(id);\n      setPosition({lat: data.latitude, lng: data.longitude})\n      setTournament(data);\n    } catch(error) {\n      history.push('/notFound');\n    }\n  }\n\n  useEffect(() => {\n    async function displayInner() {\n      await display()\n    }\n    displayInner();\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  if(tournament === null) {\n    return <Spinner animation='border' style={{display: 'block', margin: '64px auto'}} />\n  }\n\n  // Update the tournament\n\n  const onSubmit = async (data) => {\n    setUnknownError(null);\n\n    var today = new Date();\n\n    // Check the dates\n    if(data.date < today) {\n      setUnknownError('Wydarzenie nie może być w przeszłości');\n      return;\n    }\n    if(data.deadline > data.date) {\n      setUnknownError('Deadline nie może być późniejszy niż wydarzenie');\n      return;\n    }\n\n    // Edit tournament\n    data.latitude = position.lat\n    data.longitude = position.lng\n\n    let logosToDelete = [];\n    for (const [key, value] of Object.entries(data)) {\n      if(key.startsWith('logo_')) {\n        if(value === true) {\n          logosToDelete.push(key.replace('logo_', ''));\n        }\n        delete data[key]\n      }\n    }\n\n    try {\n      await editTournament(id, data);\n      for(const logo of data.logos) {\n        await addLogo(tournament.id, logo);\n      }\n      for(const logo of logosToDelete) {\n        await deleteLogo(logo);\n      }\n      history.push(`/tournament/${tournament.id}`)\n    } catch ({ response }) {\n      if(response?.data && typeof response?.data === 'object') {\n        setUnknownError(null)\n        Object.keys(response.data).forEach(key => {\n          setError(key, { type: 'server', message: response.data[key].join('\\n') })\n        })\n      } else if(response?.data) {\n        setUnknownError(response?.data)\n      } else {\n        setUnknownError('Wystąpił nieznany błąd')\n      }\n    }\n    \n  }\n\n  let existingLogos = tournament.logos?.map((logo, idx) =>\n  <tr key={idx}>\n    <td>{idx + 1}</td>\n    <td>{logo.id} ({logo.filename})</td>\n    <td>\n      <Image\n        src={url + 'logo/' + logo.filename}\n        style={{maxHeight: '100px', display: 'block', margin: '12px auto'}}\n        />\n    </td>\n    <td>\n      <Form.Check\n        id={'logo_' + logo.id}\n        {...register('logo_' + logo.id)}\n        />\n    </td>\n  </tr>\n)\n\n  let errorAlert = unknownError ?\n    <Alert variant='danger' className='my-4'>{unknownError}</Alert>\n    : null\n\n  return (\n    <Container>\n      <h1>Edytuj turniej</h1>\n      {errorAlert}\n      <Form noValidate onSubmit={handleSubmit(onSubmit)}>\n\n        <Form.Group>\n          <Form.Label>Nazwa</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='Wpisz nazwę turnieju'\n            defaultValue={tournament.name}\n            isInvalid={errors?.name}\n            {...register('name', { \n              required: { value: true, message: 'Nazwa jest wymagana'} \n            })}\n          />\n          <Form.Control.Feedback type=\"invalid\">\n            {errors?.name?.message}\n          </Form.Control.Feedback>\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label>Dyscyplina</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='Wpisz nazwę turnieju'\n            defaultValue={tournament.discipline}\n            isInvalid={errors?.discipline}\n            {...register('discipline', { \n              required: { value: true, message: 'Dyscyplina jest wymagana'} \n            })}\n          />\n          <Form.Control.Feedback type=\"invalid\">\n            {errors?.discipline?.message}\n          </Form.Control.Feedback>\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label>Maksymalna liczba uczestników</Form.Label>\n          <Form.Control\n            type='number'\n            placeholder='Wpisz liczbę uczestników'\n            defaultValue={tournament.maxParticipants}\n            isInvalid={errors?.maxParticipants}\n            {...register('maxParticipants', { \n              required: { value: true, message: 'Maksymalna liczba uczestników jest wymagana'},\n              min: { value: 1, message: 'Musi być co najmniej jeden uczestnik'},\n              max: { value: 255, message: 'Maksymalna liczba uczestników wynosi 255'}\n            })}\n          />\n          <Form.Control.Feedback type=\"invalid\">\n            {errors?.maxParticipants?.message}\n          </Form.Control.Feedback>\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label className='mr-3'>Data </Form.Label>\n          <Controller\n            control={control}\n            name='date'\n            defaultValue={new Date(tournament.date)}\n            rules={{ \n              required: { value: true, message: 'Data jest wymagana'},\n            }}\n            render={({ field: { onChange, value } }) => (\n              <DateTimePicker\n                value={value}\n                onChange={onChange}\n              />\n            )}\n          />\n          <span className='ml-3'>{errors?.date?.message}</span>\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label className='mr-3'>Deadline na zgłoszenia </Form.Label>\n          <Controller\n            control={control}\n            name='deadline'\n            defaultValue={new Date(tournament.deadline)}\n            rules={{ \n              required: { value: true, message: 'Data jest wymagana'},\n            }}\n            render={({ field: { onChange, value } }) => (\n              <DateTimePicker\n                value={value}\n                onChange={onChange}\n              />\n            )}\n          />\n          <span className='ml-3'>{errors?.deadline?.message}</span>\n        </Form.Group>\n\n        <h5>Lokalizacja</h5>\n\n        <MapContainer\n          center={{lat: tournament.latitude, lng: tournament.longitude}}\n          zoom={13}\n          scrollWheelZoom={false}\n          style={{height: '300px', margin: '0 0 32px 0', zIndex: 0}}\n        >\n          <TileLayer\n            attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n          />\n          <Marker\n            eventHandlers={eventHandlers}\n            position={position}\n            icon={icon}\n            draggable={true}\n            ref={markerRef}\n            />\n        </MapContainer>\n\n        <h5>Loga sponsorów</h5>\n        <Table>\n          <thead>\n            <tr>\n              <th>#</th>\n              <th>Identyfikator</th>\n              <th>Logo</th>\n              <th>Usuń?</th>\n            </tr>\n          </thead>\n          <tbody>\n            {existingLogos}\n          </tbody>\n        </Table>\n        <Form.File\n          id='logos'\n          label='Wybierz nowe, dodatkowe loga'\n          multiple\n          accept='image/png, image/jpeg'\n          className='mb-4'\n          {...register('logos')}\n        />\n\n        \n        <Button \n          variant='primary'\n          type='submit'>\n          Zapisz\n        </Button>\n        <Link to={'/tournament/' + id}>\n          <Button \n            variant='secondary'\n            className='ml-2'>\n            Wróć\n          </Button>\n        </Link>\n        \n      </Form>\n\n    </Container>\n  )\n}","import { useState, useEffect } from \"react\";\nimport { Container, Alert, Spinner } from \"react-bootstrap\";\nimport { useParams } from \"react-router-dom\";\nimport { activateAccount } from \"./user.service\";\n\nexport default function ActivateAccount() {\n\n  const [success, setSuccess] = useState(null);\n  const { link } = useParams();\n\n  useEffect(() => {\n    async function activateInner() {\n      try {\n        let decoded = JSON.parse(atob(link));\n        await activateAccount(decoded);\n        setSuccess(true);\n      } catch {\n        setSuccess(false);\n      }\n    }\n    activateInner();\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  let successAlert = success === true ?\n    <Alert variant='success' className='my-4'>Udało się aktywować konto.</Alert>\n    : null;\n\n  let errorAlert = success === false ?\n    <Alert variant='danger' className='my-4'>Błąd podczas aktywacji konta.</Alert>\n    : null;\n\n  let spinner = success === null ?\n    <Spinner animation='border' style={{display: 'block', margin: '64px auto'}} />\n    : null;\n\n\n  return (\n    <Container>\n      <h1>Aktywacja konta</h1>\n      {successAlert}\n      {errorAlert}\n      {spinner}\n    </Container>\n  )\n}","import { useState } from \"react\";\nimport { Container, Alert, Form, Button } from \"react-bootstrap\";\nimport { useForm } from \"react-hook-form\";\nimport { useParams } from \"react-router-dom\";\nimport { resetPassword } from \"./user.service\";\n\nexport default function ResetPassword() {\n\n  const [unknownError, setUnknownError] = useState(null);\n  const [success, setSuccess] = useState(null);\n  const { email, restoration } = useParams();\n\n  const { register, handleSubmit, formState: { errors }, setError, reset } = useForm();\n\n  const onSubmit = async (data) => {\n    setUnknownError(null)\n    if(data.password !== data.password2) {\n      setError('password2', { type: 'server', message: 'Hasła muszą byc takie same'});\n      return;\n    }\n    try {\n      await resetPassword(atob(email), data.password, restoration)\n      setSuccess(true)\n      setUnknownError(null)\n      reset()\n    } catch ({ response }) {\n      if(response?.data && typeof response?.data === 'object') {\n        setUnknownError(null)\n        Object.keys(response.data).forEach(key => {\n          setError(key, { type: 'server', message: response.data[key].join('\\n') })\n        })\n        setUnknownError('Wystąpił błąd')\n      } else if(response?.data) {\n        setUnknownError(response?.data)\n      } else {\n        setUnknownError('Wystąpił nieznany błąd')\n      }\n    }\n  }\n\n  let successAlert = success === true ?\n    <Alert variant='success' className='my-4'>Udało się zmienić hasło.</Alert>\n    : null;\n\n  let errorAlert = unknownError !== null ?\n    <Alert variant='danger' className='my-4'>{unknownError}</Alert>\n    : null;\n\n\n  return (\n    <Container>\n      <h1>Przywracanie hasła</h1>\n      {successAlert}\n      {errorAlert}\n      <Form noValidate onSubmit={handleSubmit(onSubmit)}>\n        <Form.Group>\n          <Form.Label>Hasło</Form.Label>\n          <Form.Control\n            type='password'\n            isInvalid={errors?.password}\n            {...register('password', { \n              required: { value: true, message: 'Hasło jest wymagane'} \n            })}\n          />\n          <Form.Control.Feedback type=\"invalid\">\n            {errors?.password?.message}\n          </Form.Control.Feedback>\n        </Form.Group>\n        <Form.Group>\n          <Form.Label>Powtórz hasło</Form.Label>\n          <Form.Control\n            type='password'\n            isInvalid={errors?.password2}\n            {...register('password2', { \n              required: { value: true, message: 'Hasło jest wymagane'} \n            })}\n          />\n          <Form.Control.Feedback type=\"invalid\">\n            {errors?.password2?.message}\n          </Form.Control.Feedback>\n        </Form.Group>\n        \n        <Button \n          variant='primary'\n          type='submit'>\n          Ustaw hasło\n        </Button>\n      </Form>\n    </Container>\n  )\n}","import { Navbar, Container } from \"react-bootstrap\";\n\nexport default function Footer() {\n  return (\n    <footer className='mt-5'>\n      <Navbar bg='light'>\n        <Container className='text-center'>\n          <p className='my-4' style={{width: '100%'}}>\n            Przemysław Ambroży, {(new Date()).getFullYear()}\n          </p>\n        </Container>\n      </Navbar>\n    </footer>\n  )\n}","import { useState } from \"react\";\nimport { Route, Switch } from \"react-router\";\nimport Home from \"./Home\"\nimport Login from \"./Login\";\nimport Navigation from \"./Navigation\";\nimport Register from \"./Register\";\nimport Tournament from \"./Tournament\";\nimport Me from \"./Me\";\nimport AddTournament from \"./AddTournament\";\nimport EditTournament from \"./EditTournament\";\nimport Scoreboard from \"./Scoreboard\";\nimport ActivateAccount from \"./ActivateAccount\";\nimport ResetPassword from \"./ResetPassword\";\nimport Footer from \"./Footer\";\n\nexport default function App() {\n\n  const [user, setUser] = useState(null);\n\n  return (\n    <div className=\"App\">\n      <Navigation user={user} setUser={setUser} />\n      <Switch>\n        <Route path='/register'>\n          <Register />\n        </Route>\n        <Route path='/login'>\n          <Login setUser={setUser} />\n        </Route>\n        <Route path='/activate/:link'>\n          <ActivateAccount />\n        </Route>\n        <Route path='/resetPassword/:email/:restoration'>\n          <ResetPassword />\n        </Route>\n        <Route path='/me'>\n          <Me user={user} />\n        </Route>\n        <Route path='/match'>\n          <Scoreboard />\n        </Route>\n        <Route path='/tournament/:id/edit'>\n          <EditTournament user={user} />\n        </Route>\n        <Route path='/tournament/:id'>\n          <Tournament user={user} />\n        </Route>\n        <Route path='/addTournament'>\n          <AddTournament user={user} />\n        </Route>\n        <Route path='/notFound'>\n          <p>Nie znaleziono strony</p>\n        </Route>\n        <Route path='/'>\n          <Home user={user} />\n        </Route>\n      </Switch>\n      <Footer />\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}